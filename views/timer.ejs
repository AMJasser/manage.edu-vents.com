<!DOCTYPE html>

<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>EDU-vents</title>
    <meta name="description"
        content="EDU-vents - This website was created solely for the help of Philomaths. It would show the most important educational events happening around the world, providing an easy-to-use portal for them.">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="icon" href="/images/seco.ico">
    <link href="https://fonts.googleapis.com/css?family=Roboto:400,700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/stylesheets/style.css">

    <% if (typeof msg !== "undefined") { %>
    <script>alert("<%= msg %>")</script>
    <% } %>

    <style>
        #startTimer {
            color: #1c44b2;
            margin: 15px 0;
            display: block;
            font-size: 50px;
        }

        #startTimer:hover {
            cursor: pointer;
        }
    </style>
</head>

<body>
    <header>
        <h1 onclick="location.href='/'">
            <img alt="logo" src="/images/logo.jpg">
            <span>EDU-vents</span>
        </h1>
        <nav>
            <a href="/logout">Logout</a>
        </nav>
    </header>
    <h2>Welcome <%= user.username %> Member!</h2>
    <div class="sections">

        <section id="roleSection">
            <h3>Role</h3>
            <select name="role" id="role" onchange="roleChange()">
                <option>role</option>
                <option>researcher</option>
                <option>writer</option>
            </select>
        </section>

        <section style="display: none;" id="timerSection">
            <h3 id="roleDisplay"></h3>
            <span id="startTimer" onclick="startTimer()">&#9658;</span>
            <p id="timerDisplay" style="display: none;">0m 0s</p>
            <div style="margin: 15px 0;">
                <button style="background-color: greenyellow; border: none; display: none;" id="pauseButt"
                    onclick="pause()">pause</button>
                <button style="background-color: grey; border: none; display: none;" id="playButt"
                    onclick="play()">play</button>
            </div>
            <button style="display: none; margin: 0 auto;" id="submitBut" onclick="submitTime()">Submit Time</button>
            <p id="notificationtxt" style="color: red; font-weight: bold; display: none; text-align: center;">NOTIFICATIONS NOT ENABLED CLICK HERE TO *ATTEMPT* TO ENABLE</p>
            <button style="text-align: left;" onclick="changeRole()" id="changeRoleButt">Change Role</button>
        </section>

        <section style="display: none;" id="validSection">
            <button style="border: none; color: white; background-color: grey;" id="validButt">Validate</button>
            <p style="display: none;" id="validCountdown"><strong>validate before: 2m 30s</strong></p>
            <p>Every 10 minutes, you will have to validate your existence.</p>
        </section>

    </div>
</body>

<script>
    var roleSection = document.getElementById("roleSection");
    var role = document.getElementById("role");
    var timerSection = document.getElementById("timerSection");
    var roleDisplay = document.getElementById("roleDisplay");
    var playButton = document.getElementById("startTimer");
    var changeRoleButt = document.getElementById("changeRoleButt");
    var timerDisplay = document.getElementById("timerDisplay");
    var pauseButt = document.getElementById("pauseButt");
    var playButt = document.getElementById("playButt");
    var submitBut = document.getElementById("submitBut");
    var validSection = document.getElementById("validSection");
    var validButt = document.getElementById("validButt");
    var validCountdown = document.getElementById("validCountdown");
    var notificationtxt = document.getElementById("notificationtxt");

    var timeSec = 0;
    var timeMin = 0;
    var countdownMin = 2;
    var countdownSec = 30;
    var origMin = 0;
    var origSec = 0;
    var isPaused = false;
    var useAlert = false;
    var validReq = false;
    var timeCookie;
    var roleCookie;

    function getCookie(name) {
        const value = `; ${document.cookie}`;
        const parts = value.split(`; ${name}=`);
        if (parts.length === 2) return parts.pop().split(';').shift();
    }

    function loadCookie() {
        if (typeof timeCookie !== "undefined" && typeof roleCookie !== "undefined") {
            if (roleCookie === "researcher") {
                role.getElementsByTagName("option")[1].selected = "selected";
                roleChange();
                timeMin = timeCookie;
                startTimer();
            } else if (roleCookie === "writer") {
                role.getElementsByTagName("option")[2].selected = "selected";
                roleChange();
                timeMin = timeCookie;
                startTimer();
            }
        } else if (timeCookie !== undefined || timeCookie !== undefined) {
            alert("Your time is still saved. Please select your role and the timer.");
            timeMin = timeCookie;
            timerDisplay.innerHTML = timeMin + "m " + timeSec + "s";
        }
    }

    function roleChange() {
        if (role.value === "researcher") {
            roleDisplay.innerHTML = "<%= user.researcher.name %> (Researcher)";
            timerSection.style.display = "unset";
            roleSection.style.display = "none";
        } else if (role.value === "writer") {
            roleDisplay.innerHTML = "<%= user.writer.name %> (Writer)";
            timerSection.style.display = "unset";
            roleSection.style.display = "none";
        } else {
            alert("please reselect role or contact Abdullah AlJasser if you encountered a problem.");
        }
    }

    function changeRole() {
        role.getElementsByTagName("option")[0].selected = "selected";
        timerSection.style.display = "none";
        roleSection.style.display = "unset";
    }

    function startTimer() {
        playButton.style.display = "none";
        changeRoleButt.style.display = "none";
        timerDisplay.style.display = "unset";
        validSection.style.display = "unset";
        playButt.style.display = "inline-block";
        pauseButt.style.display = "inline-block";

        setInterval(function () {

            if (!isPaused) {
                timeSec++;
                if (timeSec >= 60) {
                    timeMin++;
                    timeSec = 0;
                }
                timerDisplay.innerHTML = timeMin + "m " + timeSec + "s";
            }

            if (timeMin % 10 === 0 && timeMin !== 0 && timeSec === 0 && isPaused === false) {
                validate();
            }

            if (timeMin % 1 === 0 && timeMin !== 0 && timeSec === 0) {
                var dt = new Date;
                var newdt = new Date(dt.getTime() + 5*60000);
                document.cookie = "time=" + timeMin + "; expires=" + newdt + "; path=/timer;";
                document.cookie = "role=" + role.value + "; expires=" + newdt + "; path=/timer;";
                document.cookie = "longtime=" + timeMin + "; expires=" + new Date(dt.getTime() + 86400000) + "; path=/timer;";
            }

        }, 1000);
    }

    function pause() {
        if (isPaused === false) {
            isPaused = true;
            playButt.style.backgroundColor = "greenyellow";
            pauseButt.style.backgroundColor = "grey";
            submitBut.style.display = "block";
        }
    }

    function play() {
        if (isPaused === true && validReq === false) {
            isPaused = false;
            playButt.style.backgroundColor = "grey";
            pauseButt.style.backgroundColor = "greenyellow";
            submitBut.style.display = "none";
        }
    }

    function checkNotificationPromise() {
        try {
            Notification.requestPermission().then();
        } catch (e) {
            return false;
        }
        return true;
    }

    function askNotificationPermission() {
        function handlePermission(permission) {
            if (!('permission' in Notification)) {
                Notification.permission = permission;
            }

            if (Notification.permission === 'denied' || Notification.permission === 'default') {
                notificationtxt.style.display = 'block';
                useAlert = true;
            } else {
                notificationtxt.style.display = 'none';
            }
        }

        if (!('Notification' in window)) {
            alert("This browser does not support notifications. The validation happens every 10 minutes so you can set a timer.");
            useAlert = true;
        } else {
            if (checkNotificationPromise()) {
                Notification.requestPermission()
                    .then((permission) => {
                        handlePermission(permission);
                    })
            } else {
                Notification.requestPermission(function (permission) {
                    handlePermission(permission);
                });
            }
        }
    }

    function notify() {
        var notification = new Notification('Validate Your Existence', {
            icon: 'https://manage.edu-vents.com/images/notif_logo.jpg',
            body: "Please open up the EDU-vents timer tab to validate that you are still there",
        });
        setTimeout(notification.close.bind(notification), 10000);
    }

    function validate() {
        validButt.style.backgroundColor = "red";
        validCountdown.style.display = "block";

        validReq = true;

        countdownMin = 2;
        countdownSec = 30;

        origMin = timeMin;
        origSec = timeSec;

        var countdownTimer = setInterval(function () {
            countdownSec--;
            if (countdownSec === -1) {
                countdownMin--;
                countdownSec = 59;
            }
            validCountdown.innerHTML = "<strong>validate before: " + countdownMin + "m " + countdownSec + "s</strong>";

            if (countdownMin === 0 && countdownSec === 0) {
                pause();
                timeMin = origMin;
                timeSec = origSec;
                timerDisplay.innerHTML = timeMin + "m " + timeSec + "s";
                clearInterval(countdownTimer);
            }
        }, 1000);

        if (useAlert === true) {
            alert("Validate Your Existence");
        } else {
            notify();
        }

        validButt.addEventListener("click", function () {
            clearInterval(countdownTimer);
            validButt.style.backgroundColor = "grey";
            validCountdown.style.display = "none";
            validReq = false;
        });
    }

    function submitTime() {
        var bodyData = "role=" + role.value + "&time=";
        if (timeSec >= 30) {
            timeMin++;
        }
        bodyData = bodyData + timeMin;
        document.cookie = "time=; expires= Thu, 01 Jan 1970 00:00:00 GMT; path=/timer;";
        document.cookie = "role=; expires= Thu, 01 Jan 1970 00:00:00 GMT; path=/timer;";
        var xhttp = new XMLHttpRequest;
        xhttp.open("POST", "/timer", true);
        xhttp.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
        xhttp.send(bodyData);
        xhttp.onreadystatechange = function() {
            if (this.readyState == 4 && this.status == 200) {
                location.href = xhttp.responseText;
            }
        }
    }
 
    window.onload = function() {
        checkNotificationPromise();
        timeCookie = getCookie("time");
        roleCookie = getCookie("role");
        loadCookie();
    };
</script>

</html>